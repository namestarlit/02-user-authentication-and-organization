[tool.poetry]
name = "app"
version = "0.1.0"
description = "A user authentication and organization REST API"
authors = ["Paul John <rainson.work@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.111.0"}
sqlmodel = "^0.0.19"
alembic = "^1.13.2"
mysql-connector-python = "^9.0.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pydantic-settings = "^2.3.4"
python-jose = "^3.3.0"
tenacity = "^8.5.0"
bcrypt = "^4.1.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
ruff = "^0.5.1"
mypy = "^1.10.1"
coverage = "^7.5.4"
types-passlib = "^1.7.7.20240327"
types-python-jose = "^3.3.4.20240106"

[tool.ruff]
output-format="concise"
exclude=["migrations", ".venv"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]


[tool.mypy]
strict = true
exclude = [".venv", "migrations"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
